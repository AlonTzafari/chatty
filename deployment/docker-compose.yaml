services:
  client:
    image: alontzafari/chatty-client:1.1.0
    pull_policy: always
    restart: always
    expose:
      - 80
    environment:
      - API_HOST=api:8080
    networks:
      - chat
  api:
    image: alontzafari/chatty-api:1.1.0
    pull_policy: always
    restart: always
    expose:
      - 8080
    environment:
    - DB_URI=${DB_URI}
    - PORT=8080
    - ADDRESS=0.0.0.0
    networks:
      - chat
    depends_on:
      postgres:
        condition: service_healthy
  migrator:
    image: alontzafari/chatty-migrator:1.0.0
    pull_policy: always
    environment:
    - DB_URI=${DB_URI}
    networks:
      - chat
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17.0-alpine3.20
    restart: always
    expose:
      - 5432
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    profiles:
      - infra
    volumes:
      - pg:/var/lib/postgresql/data
    networks:
      - chat
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  pgadmin:
    image: dpage/pgadmin4:8.12.0
    restart: always
    ports:
      - 5050:80
    networks:
      - chat
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    profiles:
      - infra

networks:
  chat:
    name: chat-network

volumes:
  pg:
